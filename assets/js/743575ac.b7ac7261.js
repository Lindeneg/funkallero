"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[581],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7058:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:4,description:"Put something in data context"},o="Data Context",s={unversionedId:"part-1/data-context",id:"part-1/data-context",title:"Data Context",description:"Put something in data context",source:"@site/docs/part-1/4-data-context.md",sourceDirName:"part-1",slug:"/part-1/data-context",permalink:"/funkallero/docs/part-1/data-context",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"Put something in data context"},sidebar:"tutorialSidebar",previous:{title:"Services",permalink:"/funkallero/docs/part-1/services"},next:{title:"Actions",permalink:"/funkallero/docs/part-1/actions"}},c={},l=[{value:"User Entity",id:"user-entity",level:2},{value:"src/domain/user.ts",id:"srcdomainuserts",level:6},{value:"Data Context Service",id:"data-context-service",level:2},{value:"src/services/data-context-service.ts",id:"srcservicesdata-context-servicets",level:6}],p={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"data-context"},"Data Context"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Lindeneg/funkallero/blob/master/example/src/services/data-context-service.ts"},"example app")," uses ",(0,a.kt)("inlineCode",{parentName:"p"},"prisma"),", which is an excellent ",(0,a.kt)("inlineCode",{parentName:"p"},"ORM"),". The ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Lindeneg/funkallero/blob/master/example/__mock__/services/data-context-service.ts"},"benchmark app")," uses an in-memory solution."),(0,a.kt)("p",null,"For now lets make a ",(0,a.kt)("strong",{parentName:"p"},"simple")," implementation of the latter."),(0,a.kt)("h2",{id:"user-entity"},"User Entity"),(0,a.kt)("p",null,"Start by defining an entity interface."),(0,a.kt)("h6",{id:"srcdomainuserts"},"src/domain/user.ts"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface IUser {\n    id: string;\n    name: string;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\n\nexport default IUser;\n")),(0,a.kt)("h2",{id:"data-context-service"},"Data Context Service"),(0,a.kt)("p",null,"Add simple functionality to data context service."),(0,a.kt)("h6",{id:"srcservicesdata-context-servicets"},"src/services/data-context-service.ts"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"// diff-add-next-line\nimport { randomUUID } from 'crypto';\nimport {\n    injectService,\n    SingletonService,\n    type ILoggerService,\n    type IDataContextService,\n} from '@lindeneg/funkallero';\nimport SERVICE from '@/enums/service';\n// diff-add-next-line\nimport type User from '@/domain/user';\n\nclass DataContextService\n    extends SingletonService\n    implements IDataContextService\n{\n    @injectService(SERVICE.LOGGER)\n    private readonly logger: ILoggerService;\n\n    // diff-add-start\n    public readonly userRepository = new Map<User['id'], User>();\n\n    public async createUser(\n        user: Omit<User, 'id' | 'createdAt' | 'updatedAt'>\n    ) {\n        const id = randomUUID();\n        const now = new Date();\n        const createdUser = { ...user, id, createdAt: now, updatedAt: now };\n        this.userRepository.set(id, createdUser);\n        return createdUser;\n    }\n    // diff-add-end\n}\n\nexport default DataContextService;\n")))}u.isMDXComponent=!0}}]);
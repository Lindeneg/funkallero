"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[215],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>f});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=n.createContext({}),l=function(e){var r=n.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(d.Provider,{value:r},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(t),m=a,f=p["".concat(d,".").concat(m)]||p[m]||u[m]||i;return t?n.createElement(f,o(o({ref:r},c),{},{components:t})):n.createElement(f,o({ref:r},c))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var d in r)hasOwnProperty.call(r,d)&&(s[d]=r[d]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1759:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=t(7462),a=(t(7294),t(3905));const i={sidebar_position:2,description:"Create and use middleware services"},o="Middleware",s={unversionedId:"extra/middleware",id:"extra/middleware",title:"Middleware",description:"Create and use middleware services",source:"@site/docs/extra/2-middleware.md",sourceDirName:"extra",slug:"/extra/middleware",permalink:"/funkallero/docs/extra/middleware",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Create and use middleware services"},sidebar:"tutorialSidebar",previous:{title:"Views",permalink:"/funkallero/docs/extra/views"},next:{title:"Response Headers",permalink:"/funkallero/docs/extra/response-headers"}},d={},l=[{value:"Create",id:"create",level:2},{value:"Usage",id:"usage",level:2}],c={toc:l},p="wrapper";function u(e){let{components:r,...t}=e;return(0,a.kt)(p,(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"middleware"},"Middleware"),(0,a.kt)("p",null,"Middleware are services and thus inherits all service properties. Middleware services are then guaranteed to contain two public methods: ",(0,a.kt)("inlineCode",{parentName:"p"},"beforeRequestHandler")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"afterRequestHandler"),", which correlates to before and after decorators, respectively. However, both have an empty default implementation and thus one can implement only what's desired."),(0,a.kt)("h2",{id:"create"},"Create"),(0,a.kt)("p",null,"Middleware can be both scoped or singleton service."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Remember to register middleware inside ",(0,a.kt)("inlineCode",{parentName:"p"},"setup")," in the main project file, i.e"),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"service.registerScopedService(SERVICE.TEST_1_MIDDLEWARE, ExampleMiddlewareService);"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class ExampleMiddlewareService extends MiddlewareScopedService {\n    @injectService(SERVICE.LOGGER)\n    private readonly logger: ILoggerService;\n\n    async beforeRequestHandler(response: Response) {\n        this.logger.info(\n            `before test-2-middleware running on request: ${this.request.id}`\n        );\n    }\n\n    async afterRequestHandler(response: Response, result: MediatorResult) {\n        this.logger.info(\n            `after test-2-middleware running on request: ${this.request.id}`\n        );\n        return result;\n    }\n}\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Middleware can be consumed on route handlers via ",(0,a.kt)("inlineCode",{parentName:"p"},"before")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"after")," decorators."),(0,a.kt)("p",null,"If multiple before middleware services are added, they are executed in arbitrary order. If multiple after middleware services are added, they are always executed in the order they were provided."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@httpGet('/:id')\n@before(SERVICE.TEST_1_MIDDLEWARE, SERVICE.TEST_2_MIDDLEWARE)\n@after(SERVICE.TEST_2_MIDDLEWARE)\npublic async getUser(@params('id') id: string) {\n    return this.mediator.send('GetUserQuery', { id });\n}\n")))}u.isMDXComponent=!0}}]);
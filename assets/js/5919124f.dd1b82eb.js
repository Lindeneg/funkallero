"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[596],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),v=i,f=u["".concat(c,".").concat(v)]||u[v]||d[v]||a;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=v;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}v.displayName="MDXCreateElement"},5250:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(7462),i=(r(7294),r(3905));const a={sidebar_position:3,description:"Terse service overview"},o="Services",s={unversionedId:"part-1/services",id:"part-1/services",title:"Services",description:"Terse service overview",source:"@site/docs/part-1/3-services.md",sourceDirName:"part-1",slug:"/part-1/services",permalink:"/funkallero/docs/part-1/services",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Terse service overview"},sidebar:"tutorialSidebar",previous:{title:"First Request",permalink:"/funkallero/docs/part-1/first-request"},next:{title:"Data Context",permalink:"/funkallero/docs/part-1/data-context"}},c={},l=[{value:"Overview",id:"overview",level:2},{value:"Interfaces",id:"interfaces",level:2}],p={toc:l},u="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"services"},"Services"),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Services are at the center in Funkallero. The main property that defines a service, is the fact that it can be injected into other services."),(0,i.kt)("p",null,"In the context of web APIs, it's quite easy to think of two distinct types of services: ",(0,i.kt)("inlineCode",{parentName:"p"},"Singleton")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Scoped"),". The former is instantiated once. The latter is instantiated per request and is always injected with the request as an instance member."),(0,i.kt)("p",null,"This of course has a direct influence on the lifetime of a given service instance but it also introduces the following constraint:"),(0,i.kt)("p",null,"Singleton services can only have other singleton services as injection dependencies. Scoped services can have other scoped services as well as singletons as dependencies."),(0,i.kt)("p",null,"A bunch of defaults services are provided but any service can be extended/overwritten and custom services can be easily added."),(0,i.kt)("p",null,"At least two singleton services must always be registered, a ",(0,i.kt)("inlineCode",{parentName:"p"},"MediatorService")," and a ",(0,i.kt)("inlineCode",{parentName:"p"},"DataContextService"),"."),(0,i.kt)("p",null,"Those two services were created by the ",(0,i.kt)("inlineCode",{parentName:"p"},"init")," command before."),(0,i.kt)("h2",{id:"interfaces"},"Interfaces"),(0,i.kt)("p",null,"Known services are defined ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Lindeneg/funkallero/tree/master/packages/funkallero-core/src/service"},"here"),"."),(0,i.kt)("p",null,"Known services with default implementation is defined ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Lindeneg/funkallero/tree/master/packages/funkallero/src/service"},"here"),"."))}d.isMDXComponent=!0}}]);